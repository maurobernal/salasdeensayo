// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalasDeEnsayo.Infraestructura;

#nullable disable

namespace SalasDeEnsayo.Infraestructura.Migraciones
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230615163213_StartUp")]
    partial class StartUp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalasDeEnsayo.Entidades.instrumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SalaDeEnsayoEquipamientoid")
                        .HasColumnType("int");

                    b.Property<DateTime>("creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<bool>("habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.HasKey("id");

                    b.HasIndex("SalaDeEnsayoEquipamientoid");

                    b.ToTable("instrumento");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar")
                        .HasColumnName("descripcion_sala");

                    b.Property<bool>("habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("tipodesalaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tipodesalaid");

                    b.ToTable("saladeensayo");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayoequipamiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("SalaDeEnsayoid")
                        .HasColumnType("int");

                    b.Property<int>("idinstrumento")
                        .HasColumnType("int");

                    b.Property<int>("idsaladeensayo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("SalaDeEnsayoid");

                    b.ToTable("saladeensayoequipamiento");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.tipodesala", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<bool>("habilitado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tipodesala");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.instrumento", b =>
                {
                    b.HasOne("SalasDeEnsayo.Entidades.saladeensayoequipamiento", "SalaDeEnsayoEquipamiento")
                        .WithMany("Instrumentos")
                        .HasForeignKey("SalaDeEnsayoEquipamientoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaDeEnsayoEquipamiento");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayo", b =>
                {
                    b.HasOne("SalasDeEnsayo.Entidades.tipodesala", "tipo")
                        .WithMany("saladeensayos")
                        .HasForeignKey("tipodesalaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipo");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayoequipamiento", b =>
                {
                    b.HasOne("SalasDeEnsayo.Entidades.saladeensayo", "SalaDeEnsayo")
                        .WithMany("saladeensayoequipamiento")
                        .HasForeignKey("SalaDeEnsayoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaDeEnsayo");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayo", b =>
                {
                    b.Navigation("saladeensayoequipamiento");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.saladeensayoequipamiento", b =>
                {
                    b.Navigation("Instrumentos");
                });

            modelBuilder.Entity("SalasDeEnsayo.Entidades.tipodesala", b =>
                {
                    b.Navigation("saladeensayos");
                });
#pragma warning restore 612, 618
        }
    }
}
