<script src="~/js/tipo_de_sala_index.js"></script>


<div class="container">
    <h1>Tipo de salas disponibles</h1>
    <div class="card">
        <div class="card-header bg-light">
            <div class="row p-2 ">
                @(Html.Kendo().Button().Name("Btn_ListarSala")
                    .Icon("list").Content("Listar")
                    .Events(e => e.Click("listarSala"))
                    )
            </div>
        </div>
        @(
            Html.Kendo().Grid<TiposDeSalaDTO>()
            .Name("Grilla_Reservas")
            .Editable(e => e.Mode(GridEditMode.InLine))
            .DataSource(d =>
            {
                d.WebApi()
                .Model(m =>
                {
                    m.Id(p => p.Id);
                    m.Field(p => p.Id).Editable(false);

                })
                .Read(r => r.Action("GetReservas", "Reserva"))
                .Create(r => r.Action("CreateTipoDeSala", "TipoDeSala"))
                .Destroy("RemoveTipoDeSal", "TipoDeSala")
                .Update("UpdateTipoDeSala", "TipoDeSala");
            })
            .Columns(c =>
            {
                c.Bound(p => p.Id).Filterable(false);
                c.Bound(p => p.Descripcion).Title("Descripción de Sala").Filterable(true);
                c.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
            })
            .AutoBind(true)
            .ToolBar(t => { t.Pdf(); t.Excel(); t.Create(); })
            )
    </div>
</div>

<div class="demo-section">
    <div id="validation-success"></div>
    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
        {
        .Validatable(v =>
        {
            v.ValidateOnBlur(true);
            v.ValidationSummary(vs => vs.Enable(false));
        })
        .Items(items =>
        {
            items.AddGroup()
            .Label("Registration Form")
            .Items(i =>
            {
                i.Add()
            .Field(f => f.Equal).
            .Label(l => l.Text("First Name:"));
                i.Add()
            .Field(f => f.LastName)
            .Label(l => l.Text("Last Name:"));
                i.Add()
            .Field(f => f.UserName)
            .Label(l => l.Text("Username:"));
                i.Add()
            .Field(f => f.Password)
            .Label(l => l.Text("Password:"))
            .Hint("Hint: enter alphanumeric characters only.")
            .EditorTemplateHandler("setPasswordEditor");
                i.Add()
            .Field(f => f.Email)
            .Label(l => l.Text("Email:"));
                i.Add()
            .Field(f => f.DateOfBirth)
            .Label(l => l.Text("Date of Birth:").Optional(true));
                i.Add()
            .Field(f => f.Agree)
            .Label(l => l.Text("Agree to Terms:"));
            });
        })
        .Events(ev => ev.ValidateField("onFormValidateField").Submit("onFormSubmit").Clear("onFormClear"))
        )
    }
</div>