<script src="~/js/reservas_index.js"></script>
@{
    string exito = ViewData["exito"] as string;
}

<div class="container">
    <div class="card p-5">

        @if (exito != null)
        {
            <script>alert("Reserva Generada Exitosamente!")</script>
        }

        <div class="card-body">
            @(Html.Kendo().Form<ReservaTipoDTO>()
            .Name("formReserva")
            .HtmlAttributes(new { action = @Url.Action("GuardarReserva", "Reserva"), method = "POST" })
            .ButtonsTemplate("<button class='k-button k-primary k-form-submit' type='submit'>Generar Reserva</button>")
            .Validatable(v =>
            {
                v.ValidationSummary(false);
                v.ErrorTemplate("<span class='k-form-error'>#:message#</span>");
            })
            .Items(items =>
            {
                items.AddGroup()
                    .Label("Crear Reserva")
                .Items(i =>
                {
                        i.Add()
                    .Field(f => f.TipoDeSalaId).Name("TipoDeSalaId")
                    .Editor(e => e.DropDownList()
                    .AutoBind(true).Filter(FilterType.Contains)
                    .SelectedIndex(0)
                    .OptionLabel("Tipo de Salas")
                    .DataSource(d => d.Read("GetList", "TipoDeSala")
                    )
                    .DataTextField("Descripcion")
                    .DataValueField("Id")
                    )
                    .Label(l => l.Text("Seleccione el Tipo de Sala:"));

                        i.Add()
                    .Field(f => f.SalaDeEnsayoId).Name("SalaDeEnsayoId")
                    .Editor(e => e.DropDownList().HtmlAttributes(new { required = "required" })
                    .AutoBind(false).Filter(FilterType.Contains)
                    .SelectedIndex(0)
                    .OptionLabel("Salas")
                    .DataSource(d => d.Read(r => r.Action("GetSalasReserva", "Salas").Data("parametros"))
                        ).Events(e => e.Open("listar"))
                    .DataTextField("Descripcion")
                    .DataValueField("Id")
                    )
                    .Label(l => l.Text("Seleccione la Sala:"));
    
                        i.Add()
                    .Field(f => f.FechaInicio).Name("fechainicio")
                    .Editor(e => e.DateTimePicker().Format("dd/MM/yyyy HH:mm").Min(DateTime.Now.AddDays(1)).DateInput().HtmlAttributes(new { required = "true" }))
                    .Label(l => l.Text("Fecha Desde:").Optional(false));

                        i.Add()
                    .Field(f => f.FechaFin).Name("fechafin")
                    .Editor(e => e.DateTimePicker().Format("dd/MM/yyyy HH:mm").Min(DateTime.Now.AddDays(1)).DateInput().HtmlAttributes(new { required = "required" }))
                    .Label(l => l.Text("Fecha Hasta:").Optional(false));

                });
            })
            )
        </div>

    </div>

</div>
